#------------------------------------------------------------------------
#  This workflow installs dependencies using Poetry
#  and runs tests on pull requests to the main branch.
#  It caches the virtual environment to speed up subsequent runs.
# Copied from https://github.com/marketplace/actions/install-poetry-action
#-------------------------------------------------------------------------
name: pr-build-poetry

on:
    pull_request:
      branches: [ main ]
    workflow_dispatch:

jobs:
  pr-build-poetry:
    name: PR Build with Poetry
    runs-on: [self-hosted, linux, X64]
    container:
        image: starwitorg/base-python-image:0.0.4
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup
        run: |
          echo "POETRY_VER=$(poetry version -s)" >> $GITHUB_ENV
          echo "PYTHON_VER=$(python3 --version | cut -d ' ' -f 2)" >> $GITHUB_ENV
          python --version
          poetry --version

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: |
          poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
      #    coverage report