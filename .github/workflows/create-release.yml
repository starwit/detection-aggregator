name: Create release

on:
  workflow_dispatch:
    inputs:
      versionChoice:
        type: choice
        required: true
        description: Version Change
        options:
        - patch
        - minor
        - major

permissions:
  contents: write

jobs:
  pr-build-poetry:
    name: PR Build with Poetry
    runs-on: [self-hosted, linux, X64]
    container:
        image: starwitorg/base-python-image:0.0.6
        volumes:
            - /home/githubrunner/.cache/pypoetry:/root/.cache/pypoetry
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install GH CLI
        uses: dev-hanz-ops/install-gh-cli-action@v0.2.0

      - name: create new version in pyproject.toml
        run: |
          poetry version $VERSION
        env:
          VERSION: ${{ inputs.versionChoice }}

      - name: Install project
        run: |
          poetry config cache-dir /root/.cache/pypoetry
          bash -c ./start_make.sh

      - name: commit new version
        run: |
          git config --global user.email "code@starwit.de"
          git config --global user.name "Starwit"
          git remote set-url --push origin https://Starwit:$GITHUB_TOKEN@github.com/starwit/detection-aggregator.git
          git add .
          modifications=$(git status | grep "modified" || true)
          if [ ! -z "$modifications" ]
          then
            echo "modifications found: $modifications"
            git commit -m "modified project version" ./pyproject.toml
            git push
          fi 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create github release
        run: | 
          APP_VERSION=$(cat pyproject.toml | grep "version" | cut -d'=' -f2 | xargs echo -n)
          gh release create $APP_VERSION -F README.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ inputs.versionChoice }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login internal docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.internal.starwit-infra.de
          username: ${{ secrets.DOCKER_INTERNAL_USERNAME }}
          password: ${{ secrets.DOCKER_INTERNAL_PASSWORD }}

      - name: build docker
        run: |
          docker build -t docker.internal.starwit-infra.de/detection-aggregator:tmp .

  publish_docker:
    name: "Publish docker"
    needs: pr-build-poetry
    runs-on: [self-hosted, linux, X64]

    steps:
    - name: Login internal docker registry
      uses: docker/login-action@v3
      with:
        registry: docker.internal.starwit-infra.de
        username: ${{ secrets.DOCKER_INTERNAL_USERNAME }}
        password: ${{ secrets.DOCKER_INTERNAL_PASSWORD }}
        
    - name: push docker versioned
      run: |
        DOCKER_VERSION=$(cat pyproject.toml | grep "version" | cut -d'=' -f2 | xargs echo -n)
        docker tag docker.internal.starwit-infra.de/detection-aggregator:tmp docker.internal.starwit-infra.de/detection-aggregator:$DOCKER_VERSION
        docker push docker.internal.starwit-infra.de/detection-aggregator:$DOCKER_VERSION

  publish_helm:
    name: "Publish helm chart"
    needs: pr-build-poetry
    runs-on: [self-hosted, linux, X64]
    
    steps:
    - name: get helm
      uses: azure/setup-helm@v4

    - name: run helm package
      working-directory: deployment/helm
      run: |
        HELM_VERSION=$(cat ../../pyproject.toml | grep "version" | cut -d'=' -f2 | xargs echo -n)
        helm package . --version $HELM_VERSION --app-version $HELM_VERSION

    - name: run helm push
      working-directory: deployment/helm
      run: |
        HELM_VERSION=$(cat ../../pyproject.toml | grep "version" | cut -d'=' -f2 | xargs echo -n)
        curl -i --fail-with-body -u ${{ secrets.HELM_INTERNAL_USERNAME }}:${{ secrets.HELM_INTERNAL_PASSWORD }} --data-binary "@detection-aggregator-$HELM_VERSION.tgz" https://helm.internal.starwit-infra.de/api/charts
